
<!-- ****************************************************
SALES PRODUCTS
***************************************************** -->

<footer class="sales_footer">

	<div class="social_icons">
		<a target="_blank" href="https://www.linkedin.com/company/rosettastone"><img src="./assets/linkedin-icon.svg" alt="LinkedIn"></a><!--
		--><a target="_blank" href="https://twitter.com/RosettaStoneBiz"><img src="./assets/twitter-icon.svg" alt="Twitter"></a><!--
		--><a target="_blank" href="https://www.facebook.com/RosettaStoneEducation"><img src="./assets/facebook-icon.svg" alt="Facebook"></a>
	</div>


	<div class="footer_legalese">
		<p>
			&copy;<span class="copyright-range"></span> Rosetta Stone Ltd. All Rights Reserved.
		</p>
		<p>
			<a href="/anti-piracy">Anti-Piracy</a>
			| <a target="_blank" href="/agreements">Agreements</a>
			| <a target="_blank" href="/terms">Terms &amp; Conditions</a>
			| <a target="_blank" href="/privacy">Privacy Policy</a>
		</p>
	</div>

</footer>
<script>
// keep copyright year updated
$('.copyright-range').html('1999-'+(new Date()).getFullYear());
</script>






intro about why reader should care




Labeling yourself

People give themselves destructive labels all the time. They'll say things like "I'm not one of those tech whiz kids," or "I was never a code person."

The thing is, no one is born with tech abilities. These are learned skills, and they're not restricted to a special group of people.

When you label yourself as someone who can't do things, you sabotage yourself for no reason.

Should you "just believe in yourself" and everything will fall into place?

No.

Instead of worrying whether you're good enough, take the smallest possible first step to learn. Then repeat.

If you keep taking small steps to learn, your doubts will slowly become irrelevant because you'll have concrete progress under your belt.

Soon, you'll be the "tech genius" others tell themselves they can never be.







Listening to everyone at once

"What should I learn if I want to make a website/app/startup?"

You'll see variations of this question all over the internet.

Each time, the same pattern ensues.

Everyone will jump in with a list of things the asker should learn. Since each person named the three to five things relevant to themselves, the overall result might turn into a list of 40+ things to learn.

This is overwhelming, and it can discourage people from learning tech skills.

Your path will differ depending on what you want to do. For many areas in tech, there are a few core pieces you'll want to focus on, and you can safely ignore the rest while you're learning. To learn web development, for example, you can start with HTML and CSS and then move onto JavaScript. If you're interested, I've put together a <a href="https://simplestepscode.com/">quick road map for people who want to learn web development</a>.

In general, the best way to cut through the conflicting advice is to know your goals. Research which areas in tech sound most appealing to you, and then you'll be in a much better position to evaluate what you need to learn and whether it fits your goals.










Moving slower by rushing

People slow their progress by rushing.

It's ironic, but it's true.

When learning to code, it's natural to encounter a concept, understand it, and move onto the next thing. On the surface, that sounds like a normal progression, but it's actually a problem.

Why?

By moving onto the next thing immediately after understanding a concept, you haven't given yourself time to practice that concept and retain it. As a result, you'll feel like you're making progress, but you'll soon realize you've forgotten everything. When you can't remember what you learned at the beginning, all the later steps become impossible. You then have to skip back and forth trying to move forwards and play catch-up at the same time. You start to feel like coding is impossible, and then you give up.

This has happened to too many people, but it doesn't need to happen to you.

The key is this: when you understand something, don't immediately move on to the next thing. Take some time to play with what you just learned. Build something neat. Try a variation. See if you can type it without looking at any examples.

At first, this approach will seem to take longer, but it will save you a ton of time as the later stages become much easier.









Being good at everything you do
















notes:



X mistakes that can kill your (web development | tech | coding) career before it starts



- labeling yourself
having a fixed mindset

- moving slower by rushing

- chasing every trend instead of focusing (listening to the internet)

- not building a portfolio

- worrying about the best way to learn instead of picking a way and going with it

- believing the job descriptions

- convincing yourself you don't have enough time
[could be its own article]

- taking on huge pieces

- being good at everything you do
(a sign of not trying new things)

- overanalyzing

- comparing self to someone at the top of staircase and getting overwhelmed


