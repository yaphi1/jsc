


points to include:
- future pacing
- common frustrations
- curiosity (maybe a question: what would you do with $10,000 for example)




a personal story and the key to understanding anything
	- use math example





this web dev story might be about you
	- first come to js: copy and paste snippets (actually takes more time and effort)
	- finally decide to learn it
	- take on too big projects too early like a quiz
	- get discouraged
	- stop

	- doesn't have to be this way
	- take small pieces; get comfortable with them, might feel stupidly simple, but that's the point; you'll feel like a wizard





confessions about web development courses
	- people tell me:
		- did codecademy but forgot and couldn't apply
		- tried videos, but too much rewinding/pausing
		- traditional edu: expensive and irrelevant

	- decided to fix this:
		- practice like real conditions
		- quick wins (psychology of rewards and progress)
		- sequence of common things early instead of late so you get to practice them
		- long enough to cover important things but still short and focused enough that you'll actually complete it




You spoke. I listened.
- why should I do this instead of other courses?
- what if I'm already using codecademy, treehouse etc
- what about the risk of spending?






special stuff and shiny tactics vs what works





















old info:





schedule:

mon: get unstuck [done]

wed: course sign-up open again after 6 months [done]

thurs 6pm: easiest way to get comfortable with code (repeat a few times until automatic) [done]

fri 3pm: not a code person [progress]

mon: a personal story and the key to understanding anything

tues: copying and pasting code

wed: doubters and other courses (and testimonials)

thurs: faq and sign-up closing soon

fri:
- special stuff and shiny tactics vs what works
- sign-up closing in a few hours






possible email topics:



* - when people say they're "not a code person"

* - (the things people tell me about JavaScript courses) problem with other course formats
	[possibly same topic] - what the doubters say whenever I say I have a JS course (vs people who have seen the course)

* - what sounds simple isn't always; problem with making a quiz and other too big projects
	[possibly same topic] - why people struggle with JS

* - frequently asked questions

* - course open again after 6 months

- which frameworks vs timeless js (maybe not)

* - special stuff and shiny tactics vs what works

* - copying and pasting code (actually takes longer than learning)

- what sounds complicated can be broken into simple steps

- a personal story and the key to understanding anything

- repetition: the easiest thing you can do to learn js (like typing; can focus on message instead of where the "a" key is)

