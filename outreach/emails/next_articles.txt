next articles (some for emails and some for guest posts)


(in no particular order)



- advice to friends about portfolio; over a year later, they hadn't started
(most of the time it takes to do something is the time spent not doing it)
(action step: do something this week)

- putting off the things that matter most to you in favor of small daily distractions (harness the power of distractions to do something you actually want to 
do)

- "this is worth untangling your headphones for" That was exactly the unconscious barrier stopping me from watching a video, and by addressing it, it immediately made me watch it.

- importance of preparation (everyone focuses on the championship or the big moment but it was already won or lost in the preparation)

- preparation is like a superpower (since it gives you so much more time, it's like everything is in slow motion)

- don't let technique get in the way (get comfortable with the technical fundamentals, so that's not getting in the way of coding your ideas)

- why the best ones are not advertised

- "not a code person" (maybe use this in next sales funnel)

- tutorials can be misleading about the path of process

- how to get hired at facebook according to people at facebook
https://www.quora.com/How-can-I-become-a-frontend-developer-for-Facebook/answer/Josh-Duck?srid=un3yW

- things that stop people learning web development (examples: framework intimidation, worrying about what's next instead of doing what's now, doing too much at a time, following tutorials and not practicing on your own, being so concerned about doing everything that they don't do anything)

- thing great developers have in common (or really people who get good at anything): the people who are great at things are the ones who are okay with being bad at things (they don't immediately freeze up or shut down; they're okay with being bad and getting better)




helpful list of places to pitch:
https://pjrvs.com/about/


webdesignerdepot
- how to do a cool css thing
- how to understand some feature of the web
- something about ux
- organizational stuff (like solving the right problems)
- how to keep up with all the frameworks and tools in web dev
- things that slow people down when learning web development (or javascript)


huffpo
- best positions not advertised
- how to keep up with all the frameworks and tools in web dev
- things that stop people from learning web development
- what I learned from tennis and m kart


